% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testfuns.R
\name{sphere}
\alias{sphere}
\alias{branin_mod}
\alias{hartman6_mod}
\alias{hartman6_mod_log}
\alias{cola}
\alias{giunta}
\alias{levy}
\alias{styb}
\title{Test function}
\usage{
sphere(x, x0, ii)

branin_mod(x, ii = c(1, 2))

hartman6_mod(x, ii = c(1, 2, 3, 4, 5, 6))

hartman6_mod_log(x, ii = c(1, 2, 3, 4, 5, 6))

cola(x)

giunta(x, ii = NULL)

levy(x, ii = NULL)

styb(x, ii = NULL)
}
\arguments{
\item{x}{vector of input location, or, for \code{sphere} and \code{giunta}, matrix specifying locations where the function is to be evaluated, one point per row.}

\item{x0}{optimum in the effective space (same length as \code{ii})}

\item{ii}{effective dimensions indices}
}
\description{
Test functions adapted for the Rembo problem, i.e., possibly with non-active variables. All are defined in the [0,1]^d hypercube.\cr \cr
Implemented functions:\cr
Sphere function (Euclidean distance to given optimum) (nD)

Cola function (17D)

Giunta function (nD)

Levy function (nD)

Styblinski-Tang function (nD)
}
\details{
Levy function adapted from the code of Sonja Surjanovic and Derek Bingham
and available at https://www.sfu.ca/~ssurjano/levy.html.

Styblinski-Tang function function adapted from the code of Sonja Surjanovic and Derek Bingham
and available at https://www.sfu.ca/~ssurjano/levy.html.
}
\examples{
## Sphere function example
set.seed(35)
n <- 101
d <- 2
D <- 3

ygrid <- seq(-3,3, length.out = n)
Y <- as.matrix(expand.grid(ygrid, ygrid))
A <- selectA(d, D)
opt <- c(0.5,0.5)
fgrid <- sphere(randEmb(Y, A), x0 = opt, ii = c(1,2))
filled.contour(ygrid, ygrid, matrix(fgrid, n), color = terrain.colors)

# cola function
xstar <- c(0.1629765, 0.6627425, 0.51240525, 0.38952613, 0.39005, 0.52558138, 0.0894825,
           0.6063985, 0.06719375, 0.81655625, 0.38809425, 0.67624, 0.11579125,
           0.74532125, 0.12766, 0.39901887, 0.2887775)
cola(xstar) # 11.7464

# Giunta function
xstar <- c(0.73366, 0.73366)
giunta(xstar) # 0.06447042

# Levy function
xstar <- rep(0.55, 10)
levy(xstar) # 0

# Styblinski-Tang function
xstar <- rep(0.2096466, 10)
styb(xstar) # -39.16599 * 10

}
\references{
D. R. Jones, M. Schonlau, W. Welch (1998),  Efficient global optimization of expensive black-box functions

Madsen, Kaj, and Julius Zilinskas. Testing branch-and-bound methods for global optimization. IMM, Department of Mathematical Modelling, Technical Universityof Denmark, 2000.
}
\seealso{
\code{\link[DiceKriging]{branin}} and \code{\link[DiceKriging]{hartman6}} for the original \code{branin} and \code{hartman6} functions.
}
